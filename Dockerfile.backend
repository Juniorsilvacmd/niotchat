# Backend Dockerfile - PORTA 8010
FROM python:3.12-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    ffmpeg \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy project
COPY . .

# Set backend directory
WORKDIR /app/backend

# Create directories for media and static files
RUN mkdir -p media staticfiles

# Create superuser script
RUN echo '#!/bin/bash\n\
set -e\n\
echo "Starting Django application..."\n\
echo "Waiting for PostgreSQL to be ready..."\n\
while ! pg_isready -h postgres -p 5432 -U niochat_user -d niochat; do\n\
  echo "PostgreSQL is unavailable - sleeping..."\n\
  sleep 2\n\
done\n\
echo "PostgreSQL is ready!"\n\
echo "Running migrations..."\n\
python manage.py migrate --settings=niochat.settings\n\
echo "Collecting static files..."\n\
python manage.py collectstatic --noinput --settings=niochat.settings\n\
echo "Creating superuser..."\n\
echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username=\"Junior\").exists() or User.objects.create_superuser(\"Junior\", \"admin@niochat.com.br\", \"semfim01@\")" | python manage.py shell --settings=niochat.settings\n\
echo "Starting Daphne (ASGI server for WebSocket)..."\n\
exec "$@"' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh

# Expose porta 8010 (igual ao dev)
EXPOSE 8010

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8010/api/health/ || exit 1

# Use entrypoint script
ENTRYPOINT ["/app/entrypoint.sh"]

# Default command â€” escuta na porta 8010 com Daphne para WebSocket
CMD ["daphne", "-b", "0.0.0.0", "-p", "8010", "niochat.asgi:application"]