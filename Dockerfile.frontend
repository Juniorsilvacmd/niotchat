# Frontend Dockerfile - SOLUÇÃO DEFINITIVA SEM LOOP
FROM node:18-alpine AS build

WORKDIR /app
COPY frontend/frontend/package*.json ./
RUN npm install -g pnpm
RUN pnpm install

COPY frontend/frontend/src ./src
COPY frontend/frontend/public ./public
COPY frontend/frontend/index.html ./
COPY frontend/frontend/vite.config.js ./
COPY frontend/frontend/jsconfig.json ./
COPY frontend/frontend/components.json ./
COPY frontend/frontend/eslint.config.js ./

RUN pnpm run build

# Production stage - CONFIGURAÇÃO 100% FUNCIONAL
FROM nginx:alpine

# Copiar arquivos buildados
COPY --from=build /app/dist /usr/share/nginx/html

# ✅ CONFIGURAÇÃO CORRETA - SINTAXE CORRIGIDA
RUN rm /etc/nginx/conf.d/default.conf && \
    echo 'server {\
    listen 80;\
    server_name localhost;\
    root /usr/share/nginx/html;\
    index index.html;\
    \
    # Servir arquivos estáticos existentes\
    location / {\
        try_files \$uri \$uri/ /index.html;\
    }\
    \
    # Configuração para evitar loops\
    location = /index.html {\
        expires -1;\
        add_header Cache-Control "no-store, no-cache, must-revalidate";\
    }\
    \
    # Arquivos estáticos com cache\
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {\
        expires 1y;\
        add_header Cache-Control "public, immutable";\
    }\
    \
    error_page 500 502 503 504 /50x.html;\
    location = /50x.html {\
        root /usr/share/nginx/html;\
    }\
}' > /etc/nginx/conf.d/niochat.conf

# ✅ Configuração principal do Nginx
RUN echo 'user nginx;\
worker_processes auto;\
error_log /var/log/nginx/error.log notice;\
pid /var/run/nginx.pid;\
\
events {\
    worker_connections 1024;\
}\
\
http {\
    include /etc/nginx/conf.d/*.conf;\
}' > /etc/nginx/nginx.conf

# ✅ Permissões corretas
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx

EXPOSE 80

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# ✅ Executar como usuário nginx
USER nginx

CMD ["nginx", "-g", "daemon off;"]
