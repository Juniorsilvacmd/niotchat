# Frontend Dockerfile COM NGINX (corrigido)
FROM node:18-alpine AS build

WORKDIR /app
COPY frontend/frontend/package*.json ./
RUN npm install -g pnpm
RUN pnpm install

COPY frontend/frontend/src ./src
COPY frontend/frontend/public ./public
COPY frontend/frontend/index.html ./
COPY frontend/frontend/vite.config.js ./
COPY frontend/frontend/jsconfig.json ./
COPY frontend/frontend/components.json ./
COPY frontend/frontend/eslint.config.js ./

RUN pnpm run build

# Production stage com Nginx corrigido
FROM nginx:alpine

# ✅ REMOVER a configuração customizada que causa problemas
# ✅ Usar a configuração padrão do Nginx

# Copiar arquivos buildados
COPY --from=build /app/dist /usr/share/nginx/html

# ✅ Criar diretórios necessários com permissões corretas
RUN mkdir -p /var/cache/nginx/client_temp && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx && \
    chmod -R 755 /var/cache/nginx

# ✅ Ajustar permissões dos arquivos estáticos
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# ✅ Usar usuário nginx (que já existe na imagem)
USER nginx

CMD ["nginx", "-g", "daemon off;"]
